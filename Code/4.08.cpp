类的静态成员、函数 
protected和private内有静态成员,对于不同的对象有不同的数据,每次都需替换
静态数据成员static类成员在类的范围内所有对象共享该数据,相当于在类中的全局变量,但不会破坏数据封装性 
e.g.class X{char ch;static int s};
int X::s=0;  //必须初始化静态数据,只能够初始化一次 
X a,b,c,d;
公有静态数据成员可以直接访问 类名::静态数据成员,一般不用 对象名.静态数据成员
静态成员函数与静态数据成员相似
静态成员函数只能引用属于该类的静态数据成员、静态成员函数和类外的函数及数据,访问非静态数据成员要通过参数传递得到对象名 
类的友元函数、友元类 
将一个模块声明为另一个模块的友元,可引用到另一模块中本被隐藏的信息
friend 类型 友元函数名(参数表);声明在类的内部,实现在类的外部 
friend class 类名;
友元关系是单向的,友元关系不能传递 
